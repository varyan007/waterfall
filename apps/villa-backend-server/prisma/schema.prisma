datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Service {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  images      Json?
  name        String?
  typeField   String?
  updatedAt   DateTime @updatedAt
  villa       Villa?   @relation(fields: [villaId], references: [id])
  villaId     String?
}

model Villa {
  address     String?
  areaSqrm    Int?
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(cuid())
  images      Json?
  name        String?
  services    Service[]
  updatedAt   DateTime  @updatedAt
}

model ServicePackage {
  bookings     Booking[]
  createdAt    DateTime      @default(now())
  description  String?
  id           String        @id @default(cuid())
  images       Json?
  name         String?
  price        Float?
  pricingRules PricingRule[]
  services     Json?
  updatedAt    DateTime      @updatedAt
}

model Booking {
  createdAt        DateTime        @default(now())
  dateFrom         DateTime?
  dateTo           DateTime?
  id               String          @id @default(cuid())
  servicePackage   ServicePackage? @relation(fields: [servicePackageId], references: [id])
  servicePackageId String?
  status           String?
  totalPrice       Float?
  updatedAt        DateTime        @updatedAt
  user             User?           @relation(fields: [userId], references: [id])
  userId           String?
  villa            Villa?          @relation(fields: [villaId], references: [id])
  villaId          String?
}

model EventBanner {
  active     Boolean?
  bannerType String?
  content    String?
  createdAt  DateTime  @default(now())
  endDate    DateTime?
  id         String    @id @default(cuid())
  image      Json?
  startDate  DateTime?
  title      String?
  updatedAt  DateTime  @updatedAt
}

model PricingRule {
  createdAt        DateTime        @default(now())
  dayOfWeek        String?
  id               String          @id @default(cuid())
  priceModifier    Float?
  ruleName         String?
  season           String?
  servicePackage   ServicePackage? @relation(fields: [servicePackageId], references: [id])
  servicePackageId String?
  specialEvent     String?
  updatedAt        DateTime        @updatedAt
}

model LanguageContent {
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  key       String?
  language  String?
  updatedAt DateTime @updatedAt
}

model User {
  bookings  Booking[]
  createdAt DateTime  @default(now())
  email     String?   @unique
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  password  String
  phone     String?
  roles     Json
  updatedAt DateTime  @updatedAt
  username  String    @unique
}
