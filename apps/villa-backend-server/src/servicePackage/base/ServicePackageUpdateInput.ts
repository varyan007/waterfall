/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsJSONValue } from "../../validators";
import {
  IsOptional,
  ValidateNested,
  IsString,
  MaxLength,
  IsNumber,
  Min,
  Max,
} from "class-validator";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { BookingUpdateManyWithoutServicePackagesInput } from "./BookingUpdateManyWithoutServicePackagesInput";
import { Type } from "class-transformer";
import { PricingRuleUpdateManyWithoutServicePackagesInput } from "./PricingRuleUpdateManyWithoutServicePackagesInput";

@InputType()
class ServicePackageUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  amenities?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => BookingUpdateManyWithoutServicePackagesInput,
  })
  @ValidateNested()
  @Type(() => BookingUpdateManyWithoutServicePackagesInput)
  @IsOptional()
  @Field(() => BookingUpdateManyWithoutServicePackagesInput, {
    nullable: true,
  })
  bookings?: BookingUpdateManyWithoutServicePackagesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  images?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => PricingRuleUpdateManyWithoutServicePackagesInput,
  })
  @ValidateNested()
  @Type(() => PricingRuleUpdateManyWithoutServicePackagesInput)
  @IsOptional()
  @Field(() => PricingRuleUpdateManyWithoutServicePackagesInput, {
    nullable: true,
  })
  pricingRules?: PricingRuleUpdateManyWithoutServicePackagesInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  services?: InputJsonValue;
}

export { ServicePackageUpdateInput as ServicePackageUpdateInput };
