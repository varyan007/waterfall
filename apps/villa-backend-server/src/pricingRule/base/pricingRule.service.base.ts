/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PricingRule as PrismaPricingRule,
  ServicePackage as PrismaServicePackage,
} from "@prisma/client";

export class PricingRuleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PricingRuleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.pricingRule.count(args);
  }

  async pricingRules(
    args: Prisma.PricingRuleFindManyArgs
  ): Promise<PrismaPricingRule[]> {
    return this.prisma.pricingRule.findMany(args);
  }
  async pricingRule(
    args: Prisma.PricingRuleFindUniqueArgs
  ): Promise<PrismaPricingRule | null> {
    return this.prisma.pricingRule.findUnique(args);
  }
  async createPricingRule(
    args: Prisma.PricingRuleCreateArgs
  ): Promise<PrismaPricingRule> {
    return this.prisma.pricingRule.create(args);
  }
  async updatePricingRule(
    args: Prisma.PricingRuleUpdateArgs
  ): Promise<PrismaPricingRule> {
    return this.prisma.pricingRule.update(args);
  }
  async deletePricingRule(
    args: Prisma.PricingRuleDeleteArgs
  ): Promise<PrismaPricingRule> {
    return this.prisma.pricingRule.delete(args);
  }

  async getServicePackage(
    parentId: string
  ): Promise<PrismaServicePackage | null> {
    return this.prisma.pricingRule
      .findUnique({
        where: { id: parentId },
      })
      .servicePackage();
  }
}
